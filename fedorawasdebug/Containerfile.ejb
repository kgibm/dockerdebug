# Purpose: This is not designed for production usage but instead as a debugging and learning container.
#
# usage:
# ======
# Step 1: Build the image:
#   podman build -t kgibm/fedorawasdebugejb -f Dockerfile.ejb .
# Step 2: Run the image:
#   podman run --cap-add SYS_PTRACE --ulimit core=-1 --ulimit memlock=-1 --ulimit stack=-1 --shm-size="256m" --rm -p 9080:9080 -p 9443:9443 -p 9043:9043 -p 9081:9081 -p 9444:9444 -p 5901:5901 -p 5902:5902 -p 3390:3389 -p 9082:9082 -p 9083:9083 -p 9445:9445 -p 8080:8080 -p 8081:8081 -p 8082:8082 -p 12000:12000 -p 12005:12005 -it quay.io/kgibm/fedorawasdebugejb

FROM kgibm/fedorawasdebug

RUN sudo sed -i 's/\(<ThroughputController.*MarketSummary.*enabled="\)true">/\1false">/g' /opt/daytrader7/jmeter_files/*jmx && \
    sudo sed -i 's/\(<.*WS2 Open Connection.*enabled="\)true">/\1false">/g' /opt/daytrader7/jmeter_files/*jmx && \
    sudo sed -i 's/runtimeMode=1/runtimeMode=0/g' /opt/IBM/WebSphere/AppServer/profiles/AppSrv01/installedApps/DefaultCell01/DayTrader7.ear/daytrader-ee7-web.war/properties/daytrader.properties && \
    ( \
      mkdir /tmp/dt/ && \
      cp /config/apps/daytrader-ee7.ear /tmp/dt/ && \
      cd /tmp/dt/ && \
      jar xf daytrader-ee7.ear && \
      jar xf daytrader-ee7-web.war && \
      sed -i 's/runtimeMode=1/runtimeMode=0/g' properties/daytrader.properties && \
      jar uf daytrader-ee7-web.war properties/daytrader.properties && \
      jar uf daytrader-ee7.ear daytrader-ee7-web.war && \
      mv daytrader-ee7.ear /config/apps/daytrader-ee7.ear && \
      rm -rf /tmp/dt/ \
    )
